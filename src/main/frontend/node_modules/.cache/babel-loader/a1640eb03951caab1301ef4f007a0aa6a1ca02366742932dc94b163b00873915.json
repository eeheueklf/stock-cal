{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\StockCalc\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./Signup.module.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkDup, setCheckDup] = useState(false);\n  const handleSignUp = () => {\n    if (password.length < 8 || password.length > 30) {\n      alert(\"비밀번호는 8자 이상, 30자 이하로 입력해주세요.\");\n      return;\n    }\n    const data = {\n      username,\n      password\n    };\n    axios.post('/api/signup', data).then(response => {\n      alert(\"회원가입 성공!\");\n      navigate('/');\n    }).catch(error => {\n      alert(\"회원가입에 실패하였습니다\");\n    });\n  };\n  const checkDupUser = () => {\n    if (username.length < 5 || username.length > 20) {\n      alert(\"아이디는 5자 이상, 20자 이하로 입력해주세요.\");\n      return;\n    }\n    axios.post(\"/api/checkDupUser\", {\n      username\n    }) // 서버에서 JSON으로 처리하도록 수정\n    .then(res => {\n      if (res.data.isAvailable) {\n        setCheckDup(true);\n        alert(\"사용 가능한 아이디입니다!\");\n      } else {\n        setCheckDup(false);\n        alert(\"이미 사용 중인 아이디입니다.\");\n      }\n    }).catch(err => {\n      setCheckDup(false);\n      console.log(`${err} :: 중복 체크 실패`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.signupPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signupContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"\\uD06C\\uBCF4\\uB85C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputField,\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n            setCheckDup(false); // ID 변경 시 다시 중복 체크 필요\n          },\n          type: \"text\",\n          placeholder: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkDupUser,\n          className: styles.duplicateCheckButton,\n          children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputField,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        className: styles.signupButton,\n        disabled: !checkDup || !password // 조건에 따라 버튼 활성화\n        ,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"kmkYYH2vyWnuT2I1Pszp/3xHzSc=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\n;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","styles","axios","useNavigate","jsxDEV","_jsxDEV","Signup","_s","navigate","username","setUsername","password","setPassword","checkDup","setCheckDup","handleSignUp","length","alert","data","post","then","response","catch","error","checkDupUser","res","isAvailable","err","console","log","className","signupPage","children","signupContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","inputGroup","inputField","value","onChange","e","target","type","placeholder","onClick","duplicateCheckButton","signupButton","disabled","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/StockCalc/src/main/frontend/src/page/Signup/Signup.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from \"./Signup.module.css\"\r\nimport axios from \"axios\"\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Signup() {\r\n\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [checkDup, setCheckDup] = useState(false);\r\n\r\n    const handleSignUp = () => {\r\n        if (password.length < 8 || password.length > 30) {\r\n            alert(\"비밀번호는 8자 이상, 30자 이하로 입력해주세요.\");\r\n            return;\r\n        }\r\n        const data = { username, password };\r\n        axios.post('/api/signup', data)\r\n            .then(response => {\r\n                alert(\"회원가입 성공!\");\r\n                navigate('/');\r\n            })\r\n            .catch(error => {\r\n                alert(\"회원가입에 실패하였습니다\");\r\n            });\r\n    };\r\n\r\n    const checkDupUser = () => {\r\n        if (username.length < 5 || username.length > 20) {\r\n            alert(\"아이디는 5자 이상, 20자 이하로 입력해주세요.\");\r\n            return;\r\n        }\r\n        axios\r\n            .post(\"/api/checkDupUser\", { username }) // 서버에서 JSON으로 처리하도록 수정\r\n            .then((res) => {\r\n                if (res.data.isAvailable) {\r\n                    setCheckDup(true);\r\n                    alert(\"사용 가능한 아이디입니다!\");\r\n                } else {\r\n                    setCheckDup(false);\r\n                    alert(\"이미 사용 중인 아이디입니다.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setCheckDup(false);\r\n                console.log(`${err} :: 중복 체크 실패`);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={styles.signupPage}>\r\n            <div className={styles.signupContainer}>\r\n                <div className={styles.title}>크보로그</div>\r\n                <div className={styles.inputGroup}>\r\n                    <input\r\n                        className={styles.inputField}\r\n                        value={username}\r\n                        onChange={(e) => {\r\n                            setUsername(e.target.value);\r\n                            setCheckDup(false); // ID 변경 시 다시 중복 체크 필요\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"ID\"\r\n                    />\r\n                    <button\r\n                        onClick={checkDupUser}\r\n                        className={styles.duplicateCheckButton}\r\n                    >\r\n                        중복확인\r\n                    </button>\r\n                </div>\r\n                <div className={styles.inputGroup}>\r\n                    <input\r\n                        className={styles.inputField}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        placeholder=\"비밀번호\"\r\n                    />\r\n                </div>\r\n                <button\r\n                    onClick={handleSignUp}\r\n                    className={styles.signupButton}\r\n                    disabled={!checkDup || !password} // 조건에 따라 버튼 활성화\r\n                >\r\n                    회원가입\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}