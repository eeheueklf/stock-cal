{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\StockCalc\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\DividendCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst DividendCalculator = () => {\n  _s();\n  const [initialInvestment, setInitialInvestment] = useState(\"\");\n  const [monthlyInvestment, setMonthlyInvestment] = useState(\"\");\n  const [dividendYield, setDividendYield] = useState(\"\");\n  const [dividendGrowthRate, setDividendGrowthRate] = useState(\"\");\n  const [startYear, setStartYear] = useState(20); // 기본값: 20년부터\n  const [endYear, setEndYear] = useState(30); // 기본값: 30년까지\n  const [isTaxable, setIsTaxable] = useState(false);\n  const [taxRate, setTaxRate] = useState(\"\");\n  const [chartData, setChartData] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"http://localhost:8080/api/calculate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        initialInvestment: parseFloat(initialInvestment),\n        monthlyInvestment: parseFloat(monthlyInvestment),\n        dividendYield: parseFloat(dividendYield),\n        dividendGrowthRate: parseFloat(dividendGrowthRate),\n        startYear: parseInt(startYear),\n        endYear: parseInt(endYear),\n        taxable: isTaxable,\n        taxRate: parseFloat(taxRate)\n      })\n    });\n    const data = await response.json();\n    setChartData({\n      labels: data.years,\n      datasets: [{\n        label: \"총 투자금\",\n        data: data.totalInvestments.map(Math.floor),\n        // 소수점 제거\n        borderColor: \"blue\",\n        fill: false\n      }, {\n        label: \"연간 배당금\",\n        data: data.annualDividends.map(Math.floor),\n        // 소수점 제거\n        borderColor: \"green\",\n        fill: false\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBC30\\uB2F9 \\uC7AC\\uD22C\\uC790 \\uACC4\\uC0B0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uCD08\\uAE30 \\uD22C\\uC790\\uAE08\",\n        value: initialInvestment,\n        onChange: e => setInitialInvestment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uC6D4 \\uC801\\uB9BD \\uD22C\\uC790\\uAE08\",\n        value: monthlyInvestment,\n        onChange: e => setMonthlyInvestment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uBC30\\uB2F9\\uB960 (%)\",\n        value: dividendYield,\n        onChange: e => setDividendYield(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uBC30\\uB2F9 \\uC131\\uC7A5\\uB960 (%)\",\n        value: dividendGrowthRate,\n        onChange: e => setDividendGrowthRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uC2DC\\uC791 \\uC5F0\\uB3C4 (\\uCD5C\\uC18C 1)\",\n        value: startYear,\n        min: \"1\",\n        max: \"30\",\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uB05D \\uC5F0\\uB3C4 (\\uCD5C\\uB300 30)\",\n        value: endYear,\n        min: \"1\",\n        max: \"30\",\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uACC4\\uC0B0\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC30\\uB2F9 \\uC7AC\\uD22C\\uC790 \\uADF8\\uB798\\uD504\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(DividendCalculator, \"O38K6vHrjedDyCJHO/2AYtgPJ8w=\");\n_c = DividendCalculator;\nexport default DividendCalculator;\nvar _c;\n$RefreshReg$(_c, \"DividendCalculator\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DividendCalculator","_s","initialInvestment","setInitialInvestment","monthlyInvestment","setMonthlyInvestment","dividendYield","setDividendYield","dividendGrowthRate","setDividendGrowthRate","startYear","setStartYear","endYear","setEndYear","isTaxable","setIsTaxable","taxRate","setTaxRate","chartData","setChartData","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","parseFloat","parseInt","taxable","data","json","labels","years","datasets","label","totalInvestments","map","Math","floor","borderColor","fill","annualDividends","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","min","max","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/StockCalc/src/main/frontend/src/page/DividendCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst DividendCalculator = () => {\r\n    const [initialInvestment, setInitialInvestment] = useState(\"\");\r\n    const [monthlyInvestment, setMonthlyInvestment] = useState(\"\");\r\n    const [dividendYield, setDividendYield] = useState(\"\");\r\n    const [dividendGrowthRate, setDividendGrowthRate] = useState(\"\");\r\n    const [startYear, setStartYear] = useState(20); // 기본값: 20년부터\r\n    const [endYear, setEndYear] = useState(30); // 기본값: 30년까지\r\n    const [isTaxable, setIsTaxable] = useState(false);\r\n    const [taxRate, setTaxRate] = useState(\"\");\r\n    const [chartData, setChartData] = useState(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const response = await fetch(\"http://localhost:8080/api/calculate\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                initialInvestment: parseFloat(initialInvestment),\r\n                monthlyInvestment: parseFloat(monthlyInvestment),\r\n                dividendYield: parseFloat(dividendYield),\r\n                dividendGrowthRate: parseFloat(dividendGrowthRate),\r\n                startYear: parseInt(startYear),\r\n                endYear: parseInt(endYear),\r\n                taxable: isTaxable,\r\n                taxRate: parseFloat(taxRate),\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        setChartData({\r\n            labels: data.years,\r\n            datasets: [\r\n                {\r\n                    label: \"총 투자금\",\r\n                    data: data.totalInvestments.map(Math.floor), // 소수점 제거\r\n                    borderColor: \"blue\",\r\n                    fill: false,\r\n                },\r\n                {\r\n                    label: \"연간 배당금\",\r\n                    data: data.annualDividends.map(Math.floor), // 소수점 제거\r\n                    borderColor: \"green\",\r\n                    fill: false,\r\n                },\r\n            ],\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>배당 재투자 계산기</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"초기 투자금\"\r\n                    value={initialInvestment}\r\n                    onChange={(e) => setInitialInvestment(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"월 적립 투자금\"\r\n                    value={monthlyInvestment}\r\n                    onChange={(e) => setMonthlyInvestment(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"배당률 (%)\"\r\n                    value={dividendYield}\r\n                    onChange={(e) => setDividendYield(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"배당 성장률 (%)\"\r\n                    value={dividendGrowthRate}\r\n                    onChange={(e) => setDividendGrowthRate(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"시작 연도 (최소 1)\"\r\n                    value={startYear}\r\n                    min=\"1\"\r\n                    max=\"30\"\r\n                    onChange={(e) => setStartYear(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"끝 연도 (최대 30)\"\r\n                    value={endYear}\r\n                    min=\"1\"\r\n                    max=\"30\"\r\n                    onChange={(e) => setEndYear(e.target.value)}\r\n                />\r\n                <button type=\"submit\">계산하기</button>\r\n            </form>\r\n\r\n            {chartData && (\r\n                <div>\r\n                    <h2>배당 재투자 그래프</h2>\r\n                    <Line data={chartData} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DividendCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}